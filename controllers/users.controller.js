// jshint esversion:6
require('dotenv').config({ path: __dirname + './../.env' });

//====================================== requiring modules ===========================================//
// node modules
const bcrypt = require('bcrypt');
const fs = require('fs');
const cloudinary = require('cloudinary').v2;
// set your env variable CLOUDINARY_URL or set the following configuration
cloudinary.config({
    cloud_name: process.env.CLOUD_NAME,
    api_key: process.env.API_KEY,
    api_secret: process.env.API_SECRET,
  });
  

// custom models
const user = require('../models/users.models');
const SALT_ROUNDS = 12;

let sess;
let storedPath, path, absolutePath;

//================================== creating HTTP handler methods ==================================//
// create new user
exports.createUser = (req, res) => {    
    user.countDocuments({email_address: req.body.emailAddress}, (err, result) => {
        if(result>=1){
            console.log('Stop.');
            res.render(__dirname + './../views/signup.views.ejs', {errorMSG: 'Email Already Exists. Please use a different email to register.'});
        }else{
            console.log('Go ahead.');
                const image = req.files.profile_photo;
                // console.log(image);
                // console.log(req.files);
                console.log(req.body);
                
                
                if(image.name == ""){
                    path = __dirname + '/../public/img/gray.jpg';    
                }else{
                    path = __dirname + '/../public/img/' + image.name;
                }

                storedPath = '/img/' + image.name;
                console.log(path);
                
                console.log(storedPath);
                image.mv(path, () => {
                    // File upload
                    cloudinary.uploader.upload(path, { tags: 'basic_sample' }, function (err, image) {
                        console.log();
                        console.log("** File Upload");
                        if (err) { console.warn(err); }
                        console.log("* public_id for the uploaded image is generated by Cloudinary's service.");
                        console.log("* " + image.public_id);
                        console.log("* " + image.url);
                        // absolutePath = image.url;                             
                        // Starting session.
                        // sess = req.session;

                        // // storing user email and name in sessions.
                        // sess.useremail = req.body.emailAddress;
                        // sess.username = req.body.name;

                        let state = null;

                        if(req.body.anon == 'true'){
                            state = true;
                        }else {
                            state = false;
                        }

                        
                        let password = req.body.password;

                        if(password == null){
                            const generator = require('generate-password');
                            console.log('no password, added. /n generating new password to be sent over email');
                            // generating automatic passwords.
                            password = generator.generate({
                                length: 10,
                                numbers: true
                            });

                            // sending generated password to user's email.
                        }

                        bcrypt.hash(password, SALT_ROUNDS, function(err, hash) {
                            // Store hash in your password DB.
                            user.create({
                                name: req.body.name,
                                residence: req.body.residence,
                                user_type: req.body.userType,
                                phone_number: req.body.phoneNumber,
                                email_address: req.body.emailAddress,
                                bio: req.body.bio,
                                password: hash,
                                profile_photo: image.url,
                                anon: state
                            }).then(() => {
                                console.log('user account created ... ðŸ˜ŽðŸ˜ŽðŸ˜Ž');
                                if(req.body.formType == 'homieOrHandler'){
                                    res.redirect('/add_person');
                                }
                                res.redirect('/viewpatientList/1');
                            }).catch((err) => {
                                console.log('user not created ... ðŸ˜ªðŸ™„ðŸ˜£');
                                res.redirect('/user_signup');
                            });
                        });

                    });
                });            
        }
    });
};


exports.createHomie = (req, res) => {    
    user.countDocuments({email_address: req.body.emailAddress}, (err, result) => {
        if(result>=1){
            console.log('Stop.');
            res.render(__dirname + './../views/dashboard.views.ejs', {errorMSG: 'Email Already Exists. Please use a different email to register.'});
        }else{
            console.log('Go ahead.');
                const image = req.files.profile_photo;
                console.log(image);
                
                if(image.name == ""){
                    path = __dirname + '/../public/img/gray.jpg';    
                }else{
                    path = __dirname + '/../public/img/' + image.name;
                }

                storedPath = '/img/' + image.name;
                console.log(path);
                
                console.log(storedPath);
                image.mv(path, () => {
                    // File upload
                    cloudinary.uploader.upload(path, { tags: 'basic_sample' }, function (err, image) {
                        console.log();
                        console.log("** File Upload");
                        if (err) { console.warn(err); }
                        console.log("* public_id for the uploaded image is generated by Cloudinary's service.");
                        console.log("* " + image.public_id);
                        console.log("* " + image.url);
                        // absolutePath = image.url;                             

                        let state = null;
                        let password = req.body.password;

                        if(password == null){
                            const generator = require('generate-password');
                            console.log('no password, added. /n generating new password to be sent over email');
                            // generating automatic passwords.
                            password = generator.generate({
                                length: 10,
                                numbers: true
                            });

                            // sending generated password to user's email.
                        }

                        bcrypt.hash(password, SALT_ROUNDS, function(err, hash) {
                            // Store hash in your password DB.
                            user.create({
                                name: req.body.name,
                                residence: req.body.residence,
                                user_type: req.body.userType,
                                phone_number: req.body.phoneNumber,
                                email_address: req.body.emailAddress,
                                bio: req.body.bio,
                                password: hash,
                                profile_photo: image.url,
                                anon: state
                            }).then(() => {
                                console.log('user account created ... ðŸ˜ŽðŸ˜ŽðŸ˜Ž');
                                if(req.body.formType == 'homieOrHandler'){
                                    res.redirect('/add_person');
                                }
                                res.redirect('/dashboard/');
                            }).catch((err) => {
                                console.log('user not created ... ðŸ˜ªðŸ™„ðŸ˜£');
                                res.redirect('/user_signup');
                            });
                        });

                    });
                });            
        }
    });
};

// user authentication and logging
exports.login = (req, res) => {
    // nothing at the moment.
    user_to_login = user.where({ email_address: req.body.email_address });
    user_to_login.findOne().then((returnedUser) => {
        // Load hash from your password DB.
        console.log(req.body.password);
        
        bcrypt.compare(req.body.password, returnedUser.password).then(function(response) {
            if (response == true) {
                console.log('redirecting user .../');
                console.log('account found ... ðŸ˜ŽðŸ˜ŽðŸ˜Ž');
                res.redirect('/dashboard');
            } else {
                console.log('account not found ... ðŸ¥±ðŸ¥±ðŸ¥±');
                console.log('redirecting user .../');
                res.render(__dirname + './../views/login.views.ejs', {errorMSG: 'Wrong Login Credentials'});
            }
        });
    }).catch((err) => {
        console.log('sorry, a serious error occurred ... ðŸ˜ªðŸ™„ðŸ˜£');
        console.log('redirecting user .../');
        console.log(err);
        res.render(__dirname + './../views/login.views.ejs', {errorMSG: 'Wrong Login Credentials'});    });
};